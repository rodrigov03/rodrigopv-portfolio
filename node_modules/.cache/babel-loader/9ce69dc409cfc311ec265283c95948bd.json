{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\rodrigopv\\\\src\\\\components\\\\Home\\\\index.js\";\nimport { Component } from 'react';\nimport { Container, Form } from 'react-bootstrap';\nimport { DoubleArrow } from '@material-ui/icons';\nimport { TextField, Button } from '@material-ui/core';\nimport emailjs from 'emailjs-com';\nimport Footer from '../Footer';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleValidation = e => {\n      let fields = this.state.formvalues;\n      let errors = this.state.formvalidate;\n      let formIsValid = true; //Name\n\n      if (!fields[\"name\"]) {\n        formIsValid = false;\n        errors[\"name\"] = [\"Cannot be empty\", true];\n      }\n\n      if (typeof fields[\"name\"] !== \"undefined\") {\n        if (!fields[\"name\"].match(/^[a-zA-Z]+$/)) {\n          formIsValid = false;\n          errors[\"name\"] = [\"Only letters\", true];\n        }\n      } //Email\n\n\n      if (!fields[\"replay_to\"]) {\n        formIsValid = false;\n        errors[\"replay_to\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"replay_to\"] !== \"undefined\") {\n        let lastAtPos = fields[\"replay_to\"].lastIndexOf('@');\n        let lastDotPos = fields[\"replay_to\"].lastIndexOf('.');\n\n        if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"replay_to\"].indexOf('@@') === -1 && lastDotPos > 2 && fields[\"replay_to\"].length - lastDotPos > 2)) {\n          formIsValid = false;\n          errors[\"replay_to\"] = [\"Email is not valid\", true];\n        }\n      }\n\n      this.setState({\n        errors\n      });\n      return formIsValid;\n    };\n\n    this.sendEmail = e => {\n      e.preventDefault();\n      const validade = this.handleValidation();\n      console.log(e);\n      console.log(validade);\n\n      if (validade) {\n        this.setState({\n          formHasError: false\n        });\n        emailjs.sendForm('service_f57rnog', 'template_36ctgng', e.target, 'user_A8TUKoV7JzmuTJsyAaeac').then(result => {\n          console.log(result.text);\n        }, error => {\n          console.log(error.text);\n        });\n        e.target.reset();\n      } else {\n        console.log(this.state.formvalidate);\n        this.setState({\n          formHasError: true\n        });\n        alert(\"Form has errors.\");\n      }\n    };\n\n    this.state = {\n      formHasError: false,\n      rightSide: false,\n      formvalues: {\n        name: '',\n        replay_to: '',\n        subject: '',\n        message: ''\n      },\n      formvalidate: {\n        name: ['', false],\n        replay_to: ['', false],\n        subject: ['', false],\n        message: ['', false]\n      }\n    };\n    this.toggleForm = this.toggleForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  toggleForm() {\n    this.setState({\n      rightSide: !this.state.rightSide\n    });\n    console.log('toogle');\n    document.querySelector('.homebg').classList.toggle('minimize-left');\n    document.querySelector('.contactForm-Wrapper').classList.toggle('hide-right');\n  }\n\n  handleChange(e) {\n    let tempvalues = this.state.formvalues;\n    tempvalues[e.target.getAttribute(\"name\")] = e.target.value;\n    this.setState({\n      tempvalues\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        className: \"homebg p-0\",\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          className: \"homeCont\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"homeCont_wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Hey there, I'm Rodrigo.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Front End Developer / Web Developer / Self-Taught Dev\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"homeCont_descr\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"homeCont_descr__highlight\",\n                children: \"I create engaging and pixel perfect websites.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"homeCont_descr__contact\",\n                children: [\"My portfolio is currently under construction \\uD83D\\uDEA7\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 119\n                }, this), \"however, don't hesitate to contact me \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"btnToggForm\",\n                  onClick: this.toggleForm,\n                  children: [\"here \", /*#__PURE__*/_jsxDEV(DoubleArrow, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 223\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 162\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), this.state.rightSide && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close-right-side\",\n        onClick: this.toggleForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contactForm-Wrapper hide-right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contactForm-Inner\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            noValidate: true,\n            autoComplete: \"off\",\n            onSubmit: this.sendEmail,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                name: \"name\",\n                label: \"Name\",\n                onChange: this.handleChange,\n                variant: \"filled\",\n                error: this.state.formvalidate.name[1],\n                value: this.state.formvalues.name,\n                helperText: this.state.formvalidate.name,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"replay_to\",\n                label: \"Email\",\n                onChange: this.handleChange,\n                variant: \"filled\",\n                error: this.state.formvalidate.replay_to[1],\n                value: this.state.formvalues.replay_to,\n                helperText: this.state.formvalidate.replay_to,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"subject\",\n                label: \"Subject\",\n                onChange: this.handleChange,\n                variant: \"filled\",\n                error: this.state.formvalidate.subject[1],\n                value: this.state.formvalues.subject,\n                helperText: this.state.formvalidate.subject,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"message\",\n                multiline: true,\n                rows: 8,\n                label: \"Message\",\n                onChange: this.handleChange,\n                error: this.state.formvalidate.message[1],\n                variant: \"filled\",\n                value: this.state.formvalues.message,\n                helperText: this.state.formvalidate.message,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/xampp/htdocs/rodrigopv/src/components/Home/index.js"],"names":["Component","Container","Form","DoubleArrow","TextField","Button","emailjs","Footer","Home","constructor","props","handleValidation","e","fields","state","formvalues","errors","formvalidate","formIsValid","match","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","setState","sendEmail","preventDefault","validade","console","log","formHasError","sendForm","target","then","result","text","error","reset","alert","rightSide","name","replay_to","subject","message","toggleForm","bind","handleChange","document","querySelector","classList","toggle","tempvalues","getAttribute","value","render"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport { Container, Form } from 'react-bootstrap';\r\nimport { DoubleArrow } from '@material-ui/icons';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport emailjs from 'emailjs-com';\r\nimport Footer from '../Footer'  \r\n    class Home extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = { \r\n                formHasError: false,\r\n                rightSide: false,\r\n                formvalues: {\r\n                    name: '',\r\n                    replay_to: '',\r\n                    subject: '',\r\n                    message: ''\r\n                },\r\n                formvalidate:{\r\n                    name: ['', false],\r\n                    replay_to: ['', false],\r\n                    subject: ['', false],\r\n                    message: ['', false]\r\n                }\r\n            };\r\n            this.toggleForm = this.toggleForm.bind(this);\r\n            this.handleChange = this.handleChange.bind(this);\r\n            this.handleValidation = this.handleValidation.bind(this);\r\n            \r\n        }\r\n        handleValidation = (e) => {\r\n            let fields = this.state.formvalues;\r\n            let errors = this.state.formvalidate;\r\n            let formIsValid = true;\r\n\r\n            //Name\r\n            if(!fields[\"name\"]){\r\n               formIsValid = false;\r\n               errors[\"name\"] = [\"Cannot be empty\", true];\r\n            }\r\n      \r\n            if(typeof fields[\"name\"] !== \"undefined\"){\r\n               if(!fields[\"name\"].match(/^[a-zA-Z]+$/)){\r\n                  formIsValid = false;\r\n                  errors[\"name\"] = [\"Only letters\", true];\r\n               }        \r\n            }\r\n       \r\n            //Email\r\n            if(!fields[\"replay_to\"]){\r\n               formIsValid = false;\r\n               errors[\"replay_to\"] = \"Cannot be empty\";\r\n            }\r\n      \r\n            if(typeof fields[\"replay_to\"] !== \"undefined\"){\r\n               let lastAtPos = fields[\"replay_to\"].lastIndexOf('@');\r\n               let lastDotPos = fields[\"replay_to\"].lastIndexOf('.');\r\n\r\n               if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"replay_to\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"replay_to\"].length - lastDotPos) > 2)) {\r\n                  formIsValid = false;\r\n                  errors[\"replay_to\"] = [\"Email is not valid\", true];\r\n                }\r\n            }  \r\n\r\n            this.setState({errors});\r\n            return formIsValid;\r\n        }   \r\n        toggleForm(){\r\n            this.setState({\r\n                rightSide: !this.state.rightSide\r\n            })\r\n            console.log('toogle');\r\n            document.querySelector('.homebg').classList.toggle('minimize-left')\r\n            document.querySelector('.contactForm-Wrapper').classList.toggle('hide-right')\r\n        }\r\n        handleChange(e){\r\n            let tempvalues = this.state.formvalues\r\n            tempvalues[e.target.getAttribute(\"name\")] = e.target.value\r\n            this.setState({tempvalues})\r\n        }\r\n        sendEmail = (e) => {\r\n            e.preventDefault();\r\n            const validade = this.handleValidation()\r\n            console.log(e)\r\n            console.log(validade)\r\n            if(validade){\r\n                this.setState({formHasError: false})\r\n                emailjs.sendForm('service_f57rnog', 'template_36ctgng', e.target, 'user_A8TUKoV7JzmuTJsyAaeac')\r\n                    .then((result) => {\r\n                        console.log(result.text);\r\n                    }, (error) => {\r\n                        console.log(error.text);\r\n                    });\r\n                    e.target.reset()\r\n            }else{\r\n                console.log(this.state.formvalidate)\r\n                this.setState({formHasError: true})\r\n                alert(\"Form has errors.\")\r\n            }\r\n            \r\n        }\r\n        render() {\r\n        return (\r\n            <>\r\n                <Container fluid className=\"homebg p-0\">\r\n                    <Container className=\"homeCont\"> \r\n                    {/*<SideNav/>*/}\r\n                        <div className=\"homeCont_wrapper\">\r\n                            <h1>Hey there, I'm Rodrigo.</h1> \r\n                            <h3>Front End Developer / Web Developer / Self-Taught Dev</h3>\r\n                            <div className=\"homeCont_descr\">\r\n                                <p className=\"homeCont_descr__highlight\">I create engaging and pixel perfect websites.</p>\r\n                                <p className=\"homeCont_descr__contact\">My portfolio is currently under construction 🚧<br/>however, don't hesitate to contact me <span className=\"btnToggForm\" onClick={this.toggleForm}>here <DoubleArrow/></span></p>\r\n                            </div>\r\n                        </div>\r\n                    </Container>\r\n                    <Footer/>\r\n                </Container>\r\n                {this.state.rightSide && (\r\n                    <div className=\"close-right-side\" onClick={this.toggleForm}></div>\r\n                )}\r\n                <div className=\"contactForm-Wrapper hide-right\">\r\n                    <div className=\"contactForm-Inner\">\r\n                        <form className='form' noValidate autoComplete=\"off\" onSubmit={this.sendEmail}>\r\n                            <Form.Group>\r\n                                <TextField name=\"name\" label=\"Name\" onChange={this.handleChange} variant=\"filled\" error={this.state.formvalidate.name[1]} value={this.state.formvalues.name} helperText={this.state.formvalidate.name} required/>\r\n                                <TextField name=\"replay_to\" label=\"Email\" onChange={this.handleChange} variant=\"filled\" error={this.state.formvalidate.replay_to[1]} value={this.state.formvalues.replay_to} helperText={this.state.formvalidate.replay_to} required/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <TextField name=\"subject\" label=\"Subject\" onChange={this.handleChange} variant=\"filled\" error={this.state.formvalidate.subject[1]} value={this.state.formvalues.subject} helperText={this.state.formvalidate.subject} required/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <TextField name=\"message\" multiline rows={8} label=\"Message\" onChange={this.handleChange} error={this.state.formvalidate.message[1]} variant=\"filled\" value={this.state.formvalues.message} helperText={this.state.formvalidate.message} required/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button type=\"submit\" variant=\"contained\">Send</Button>\r\n                            </Form.Group>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}